on:
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

defaults:
  run:
    shell: bash

jobs:
  changes:
    name: Detect changed files
    runs-on: ubuntu-latest
    outputs:
      project: ${{ steps.changes.outputs.project }}
      fixtures-pypi: ${{ steps.changes.outputs.fixtures-pypi }}
      src: ${{ steps.changes.outputs.src }}
      tests: ${{ steps.changes.outputs.tests }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        with:
          filters: |
            workflow: &workflow
              - '.github/actions/**'
              - '.github/workflows/tests.yaml'
              - '.github/workflows/.tests-matrix.yaml'
            project: &project
              - *workflow
              - 'uv.lock'
              - 'pyproject.toml'
            src:
              - *project
              - 'src/**/*.py'
            tests:
              - *project
              - 'src/**/*.py'
              - 'tests/**'

  lockfile:
    name: Check uv.lock
    runs-on: ubuntu-latest
    if: needs.changes.outputs.project == 'true'
    needs: changes
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - run: uv sync

  tests-matrix:
    # Use this matrix with multiple jobs defined in a reusable workflow:
    uses: ./.github/workflows/tests-matrix.yaml
    name: 'Python ${{ matrix.python-version }}'
    if: '!failure()'
    needs:
      - changes
      - lockfile
    with:
      runner: ubuntu-latest
      python-version: ${{ matrix.python-version }}
      run-mypy: ${{ needs.changes.outputs.tests == 'true' }}
      run-pytest: ${{ needs.changes.outputs.tests == 'true' }}
      run-black: ${{ needs.changes.outputs.tests == 'true' }}
      run-ruff-check: ${{ needs.changes.outputs.tests == 'true' }}
    secrets: inherit
    strategy:
      matrix:
        python-version:
          - '3.11'
          - '3.12'
          - '3.13'
      fail-fast: false

  status:
    name: Status
    runs-on: ubuntu-latest
    if: always()
    needs:
      - changes
      - lockfile
      - tests-matrix
    steps:
      - run: ${{ (contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')) && 'false' || 'true' }}
